{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"swiper-container\"\n};\nconst _hoisted_2 = {\n  class: \"swiper-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" ... \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" It is important to set \\\"left\\\" style prop on every slide \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.virtualData.slides, (slide, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"swiper-slide\",\n      key: index,\n      style: _normalizeStyle({\n        left: `${$data.virtualData.offset}px`\n      })\n    }, _toDisplayString(slide), 5 /* TEXT, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" ... \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","$data","virtualData","slides","slide","index","key","style","_normalizeStyle","left","offset"],"sources":["/Users/danilagalitskiy/Desktop/brume/src/components/HomePage/HomeSlider.vue"],"sourcesContent":["<template>\n  <!-- ... -->\n  <div class=\"swiper-container\">\n    <div class=\"swiper-wrapper\">\n      <!-- It is important to set \"left\" style prop on every slide -->\n      <div\n        class=\"swiper-slide\"\n        v-for=\"(slide, index) in virtualData.slides\"\n        :key=\"index\"\n        :style=\"{left: `${virtualData.offset}px`}\"\n      >{{slide}}</div>\n    </div>\n  </div>\n  <!-- ... -->\n</template>\n<script>\nimport \"swiper/dist/css/swiper.css\";\nimport \"./main.css\";\nimport Swiper from \"swiper/dist/js/swiper.esm.bundle\";\n\nexport default {\n  data() {\n    return {\n      // dummy slides data\n      slides: (function() {\n        var slides = [];\n        for (var i = 0; i < 600; i += 1) {\n          slides.push(\"Slide \" + (i + 1));\n        }\n        return slides;\n      })(),\n      // virtual data\n      virtualData: {\n        slides: []\n      }\n    };\n  },\n  mounted() {\n    const self = this;\n    new Swiper(\".swiper-container\", {\n      on: {\n        slideChangeTransitionStart() {\n          console.log(\"slideChangeTransitionStart\");\n        },\n        slideChangeTransitionEnd() {\n          console.log(\"slideChangeTransitionEnd\");\n        },\n        slideResetTransitionStart() {\n          console.log(\"slideResetTransitionStart\");\n        },\n        slideNextTransitionStart() {\n          console.log(\"slideNextTransitionStart\");\n        },\n        slidePrevTransitionStart() {\n          console.log(\"slidePrevTransitionStart\");\n        },\n        slideChange() {\n          console.log(\"slideChange\");\n        },\n        transitionEnd() {\n          console.log(\"transitionEnd\");\n        },\n        transitionStart() {\n          console.log(\"transitionStart\");\n        }\n      },\n      virtual: {\n        slides: self.slides,\n        renderExternal(data) {\n          // assign virtual slides data\n          self.virtualData = data;\n        }\n      }\n    });\n  }\n};\n</script>"],"mappings":";;EAEOA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAgB;;6DAF7BC,mBAAA,SAAY,EACZC,mBAAA,CAUM,OAVNC,UAUM,GATJD,mBAAA,CAQM,OARNE,UAQM,GAPJH,mBAAA,+DAAgE,G,kBAChEI,mBAAA,CAKgBC,SAAA,QAAAC,WAAA,CAHWC,KAAA,CAAAC,WAAW,CAACC,MAAM,GAAnCC,KAAK,EAAEC,KAAK;yBAFtBP,mBAAA,CAKgB;MAJdL,KAAK,EAAC,cAAc;MAEnBa,GAAG,EAAED,KAAK;MACVE,KAAK,EAAAC,eAAA;QAAAC,IAAA,KAAYR,KAAA,CAAAC,WAAW,CAACQ,MAAM;MAAA;wBACnCN,KAAK;sCAGZV,mBAAA,SAAY,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}